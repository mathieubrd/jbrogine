#version 330 core

layout(triangles) in;
layout(triangle_strip, max_vertices=3) out;

in vec3 vLightVector[];
in vec3 vVertexWorld[];
in vec2 vTexCoords[];
in vec3 vToCameraVector[];

out vec3 gsVertexWorld;
out vec3 gsLightVector;
out vec3 gsNormalWorld;
out vec2 gsTexCoords;
out vec3 gsToCameraVector;

void main() {
	vec3 n = cross(vVertexWorld[1].xyz-vVertexWorld[0].xyz, vVertexWorld[2].xyz-vVertexWorld[0].xyz);

	gsVertexWorld = vVertexWorld[0];
	gsLightVector = vLightVector[0];
	gsToCameraVector = vToCameraVector[0];
	gsNormalWorld = n;
	gsTexCoords = vTexCoords[0];
	gl_Position = gl_in[0].gl_Position;
    EmitVertex();
    
    gsVertexWorld = vVertexWorld[1];
    gsLightVector = vLightVector[1];
    gsToCameraVector = vToCameraVector[1];
	gsNormalWorld = n;
	gsTexCoords = vTexCoords[1];
	gl_Position = gl_in[1].gl_Position;
    EmitVertex();
    
    gsVertexWorld = vVertexWorld[2];
    gsLightVector = vLightVector[2];
    gsToCameraVector = vToCameraVector[2];
	gsNormalWorld = n;
	gsTexCoords = vTexCoords[2];
	gl_Position = gl_in[2].gl_Position;
    EmitVertex();
    
    EndPrimitive();
}